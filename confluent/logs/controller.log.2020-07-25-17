[2020-07-25 17:02:10,863] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-25 17:02:10,864] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-25 17:02:10,865] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-25 17:02:10,865] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-25 17:07:10,866] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-25 17:07:10,866] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-25 17:07:10,867] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-25 17:07:10,867] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-25 17:12:10,867] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-25 17:12:10,867] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-25 17:12:10,868] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-25 17:12:10,869] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-25 17:12:30,661] DEBUG [Controller id=0] Delete topics listener fired for topics test1 to be deleted (kafka.controller.KafkaController)
[2020-07-25 17:12:30,662] INFO [Controller id=0] Starting topic deletion for topics test1 (kafka.controller.KafkaController)
[2020-07-25 17:12:30,664] INFO [Topic Deletion Manager 0] Handling deletion for topics test1 (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:30,667] INFO [Topic Deletion Manager 0] Deletion of topic test1 (re)started (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:30,691] INFO [RequestSendThread controllerId=0] Controller 0 connected to lux:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-25 17:12:30,762] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test1,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-25 17:12:30,766] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test1,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-25 17:12:30,837] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test1-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-25 17:12:30,843] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:30,848] INFO [Topic Deletion Manager 0] Handling deletion for topics test1 (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:30,903] INFO [Topic Deletion Manager 0] Deletion of topic test1 successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:30,907] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-25 17:12:30,909] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-25 17:12:44,077] DEBUG [Controller id=0] Delete topics listener fired for topics test2 to be deleted (kafka.controller.KafkaController)
[2020-07-25 17:12:44,077] INFO [Controller id=0] Starting topic deletion for topics test2 (kafka.controller.KafkaController)
[2020-07-25 17:12:44,078] INFO [Topic Deletion Manager 0] Handling deletion for topics test2 (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:44,078] INFO [Topic Deletion Manager 0] Deletion of topic test2 (re)started (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:44,088] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test2,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-25 17:12:44,097] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test2,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-25 17:12:44,124] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test2-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-25 17:12:44,124] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:44,125] INFO [Topic Deletion Manager 0] Handling deletion for topics test2 (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:44,154] INFO [Topic Deletion Manager 0] Deletion of topic test2 successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-25 17:12:44,156] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-25 17:12:44,158] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-25 17:12:54,862] INFO [Controller id=0] New topics: [Set(test1)], deleted topics: [Set()], new partition replica assignment [Map(test1-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-25 17:12:54,862] INFO [Controller id=0] New partition creation callback for test1-0 (kafka.controller.KafkaController)
[2020-07-25 17:13:09,618] INFO [Controller id=0] New topics: [Set(test2)], deleted topics: [Set()], new partition replica assignment [Map(test2-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-25 17:13:09,618] INFO [Controller id=0] New partition creation callback for test2-0 (kafka.controller.KafkaController)
[2020-07-25 17:14:45,249] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-07-25 17:14:45,250] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-07-25 17:14:45,251] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-07-25 17:14:45,263] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),test1-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__confluent.support.metrics-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),test2-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3) (kafka.controller.KafkaController)
[2020-07-25 17:14:46,758] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-25 17:14:46,760] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-25 17:14:46,760] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-25 17:14:46,761] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-07-25 17:14:46,763] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-25 17:14:46,767] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-07-25 17:14:46,767] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-07-25 17:14:46,768] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-07-25 17:14:46,769] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-07-25 17:14:46,768] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-07-25 17:14:46,779] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
